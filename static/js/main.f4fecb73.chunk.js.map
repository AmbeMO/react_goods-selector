{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","buttonClick","item","setState","prevState","includes","filter","e","buttonClear","titleText","selectedArr","length","slice","join","this","className","Boolean","onClick","type","map","good","goodsSelected","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,cAAe,CAAC,QAFpB,EAKEC,YAAc,SAACC,GACb,IAAQF,EAAkB,EAAKD,MAAvBC,cAER,EAAKG,UAAS,SAAAC,GACZ,OAAIJ,EAAcK,SAASH,GAClB,CACLF,cAAeI,EAAUJ,cAAcM,QAAO,SAAAC,GAAC,OAAIA,IAAML,MAItD,CAAEF,cAAc,GAAD,mBAAMA,GAAN,CAAqBE,SAfjD,EAmBEM,YAAc,WACZ,EAAKL,SAAS,CACZH,cAAe,MArBrB,EAyBES,UAAY,SAACC,GACX,OAAQA,EAAYC,QAClB,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUD,EAAV,gBACF,QACE,MAAM,GAAN,OAAUA,EAAYE,MAAM,GAAI,GAAGC,KAAK,MAAxC,gBAAqDH,EAAYA,EAAYC,OAAS,GAAtF,mBAhCR,4CAoCE,WAAU,IAAD,OACCX,EAAkBc,KAAKf,MAAvBC,cAER,OACE,sBAAKe,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,wBACA,oBAAIA,UAAU,aAAd,SACID,KAAKL,UAAUT,KAEnB,qBAAKe,UAAU,gBAAf,SACGC,QAAQhB,EAAcW,SAErB,wBACEM,QAASH,KAAKN,YACdO,UAAU,YACVG,KAAK,SAHP,qBASJ,oBAAIH,UAAU,UAAd,SACGlB,EAAgBsB,KAAI,SAACC,GACpB,IAAMC,EAAgBrB,EAAcK,SAASe,GAE7C,OACE,sBAAKL,UAAU,OAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BK,IAC5B,wBACEH,QAAS,WACP,EAAKhB,YAAYmB,IAEnBL,UAAU,YACVG,KAAK,SALP,SAOIG,EACE,SACA,0BAzEtB,GAAyBC,IAAMC,WCjB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f4fecb73.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[],\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  buttonClick = (item: string) => {\n    const { selectedGoods } = this.state;\n\n    this.setState(prevState => {\n      if (selectedGoods.includes(item)) {\n        return {\n          selectedGoods: prevState.selectedGoods.filter(e => e !== item),\n        };\n      }\n\n      return { selectedGoods: [...selectedGoods, item] };\n    });\n  };\n\n  buttonClear = () => {\n    this.setState({\n      selectedGoods: [],\n    });\n  };\n\n  titleText = (selectedArr: string[]) => {\n    switch (selectedArr.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${selectedArr} is selected`;\n      default:\n        return `${selectedArr.slice(0, -1).join(', ')} and ${selectedArr[selectedArr.length - 1]} are selected`;\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"app__title\">Goods List</h1>\n        <h1 className=\"app__title\">\n          { this.titleText(selectedGoods) }\n        </h1>\n        <div className=\"clear-btn-wrp\">\n          {Boolean(selectedGoods.length)\n          && (\n            <button\n              onClick={this.buttonClear}\n              className=\"clear-btn\"\n              type=\"button\"\n            >\n              Clear\n            </button>\n          )}\n        </div>\n        <ul className=\"app__ul\">\n          {goodsFromServer.map((good) => {\n            const goodsSelected = selectedGoods.includes(good);\n\n            return (\n              <div className=\"good\">\n                <li className=\"good__name\">{good}</li>\n                <button\n                  onClick={() => {\n                    this.buttonClick(good);\n                  }}\n                  className=\"good__btn\"\n                  type=\"button\"\n                >\n                  { goodsSelected\n                    ? 'Remove'\n                    : 'Select'}\n                </button>\n              </div>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport {App} from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}